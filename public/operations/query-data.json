{
  "openapi": "3.1.0",
  "info": {
    "title": "Upstash Vector API - Query Data",
    "version": "1.0.0",
    "description": "API for querying the approximate nearest neighbors of a raw text data after embedding it."
  },
  "servers": [
    {
      "url": "{UPSTASH_VECTOR_REST_URL}",
      "variables": {
        "UPSTASH_VECTOR_REST_URL": {
          "default": "https://your-vector-db-url.upstash.io"
        }
      }
    }
  ],
  "paths": {
    "/query-data/{namespace}": {
      "post": {
        "summary": "Query Data",
        "description": "Queries the approximate nearest neighbors of a raw text data after embedding it.",
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "description": "The namespace to use. When no namespace is specified, the default namespace will be used.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["data", "topK"],
                "properties": {
                  "data": {
                    "type": "string",
                    "description": "The raw text data to embed and query."
                  },
                  "topK": {
                    "type": "integer",
                    "description": "The total number of the vectors that you want to receive as a query result.",
                    "default": 10
                  },
                  "includeMetadata": {
                    "type": "boolean",
                    "description": "Whether to include the metadata of the vectors in the response, if any.",
                    "default": false
                  },
                  "includeVectors": {
                    "type": "boolean",
                    "description": "Whether to include the vector values in the response.",
                    "default": false
                  },
                  "includeData": {
                    "type": "boolean",
                    "description": "Whether to include the data of the vectors in the response.",
                    "default": false
                  },
                  "filter": {
                    "type": "string",
                    "description": "Metadata filter to apply.",
                    "default": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "scores": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["id", "score"],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The id of the vector."
                          },
                          "score": {
                            "type": "number",
                            "description": "The similarity score of the vector, calculated based on the distance metric of your index."
                          },
                          "vector": {
                            "type": "array",
                            "items": {
                              "type": "number"
                            },
                            "description": "The vector value."
                          },
                          "metadata": {
                            "type": "object",
                            "description": "The metadata of the vector, if any."
                          },
                          "data": {
                            "type": "string",
                            "description": "The textual data of the vector before embedding it."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "405": {
            "description": "Method Not Allowed"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
